var _user$project$Hello$imageView = function (_p0) {
	var _p1 = _p0;
	var imagefile = function () {
		var _p2 = _p1.direction;
		switch (_p2.ctor) {
			case 'Left':
				return 'images/deeter-left.png';
			case 'Right':
				return 'images/deeter-right.png';
			default:
				return 'images/deeter-up.png';
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$img,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$src(imagefile)
					]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$Hello$positionView = function (_p3) {
	var _p4 = _p3;
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'x = ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p4.x),
						A2(
							_elm_lang$core$Basics_ops['++'],
							', y = ',
							_elm_lang$core$Basics$toString(_p4.y)))))
			]));
};
var _user$project$Hello$view = function (m) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Hello$positionView(m),
				_user$project$Hello$imageView(m)
			]));
};
var _user$project$Hello$Model = F3(
	function (a, b, c) {
		return {x: a, y: b, direction: c};
	});
var _user$project$Hello$Up = {ctor: 'Up'};
var _user$project$Hello$Right = {ctor: 'Right'};
var _user$project$Hello$Left = {ctor: 'Left'};
var _user$project$Hello$decide = function (msg) {
	var d = (_elm_lang$core$Native_Utils.cmp(msg.x, 200) < 0) ? _user$project$Hello$Left : _user$project$Hello$Right;
	return {x: msg.x, y: msg.y, direction: d};
};
var _user$project$Hello$main = {
	main: _user$project$Programmator$viewFromOneInputAndDecide(
		{
			init: {x: 0, y: 0, direction: _user$project$Hello$Up},
			input: _elm_lang$mouse$Mouse$moves,
			decide: _user$project$Hello$decide,
			view: _user$project$Hello$view
		}),
	flags: _elm_lang$core$Json_Decode$succeed(
		{})
};
